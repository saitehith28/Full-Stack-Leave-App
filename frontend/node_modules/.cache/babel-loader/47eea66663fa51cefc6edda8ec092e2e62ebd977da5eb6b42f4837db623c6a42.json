{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack Leave App\\\\frontend\\\\src\\\\Pages\\\\ProtectedRoutes.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Navigate\n} = require(\"react-router-dom\");\nfunction ProtectedRoutes(_ref) {\n  let {\n    path,\n    children\n  } = _ref;\n  let loggedInUser = localStorage.getItem(\"loggedInUser\");\n  loggedInUser = loggedInUser ? JSON.parse(loggedInUser) : null;\n  if (loggedInUser && loggedInUser.email) {\n    return children;\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: path,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n}\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["Navigate","require","ProtectedRoutes","path","children","loggedInUser","localStorage","getItem","JSON","parse","email"],"sources":["D:/Full Stack Leave App/frontend/src/Pages/ProtectedRoutes.js"],"sourcesContent":["const { Navigate } = require(\"react-router-dom\");\r\n\r\nfunction ProtectedRoutes({path,children}){\r\n    let loggedInUser=localStorage.getItem(\"loggedInUser\");\r\n    loggedInUser=loggedInUser ? JSON.parse(loggedInUser) : null;\r\n    if(loggedInUser && loggedInUser.email){\r\n        return children\r\n    }\r\n    else{\r\n        return <Navigate to={path} replace={true}/>\r\n    }\r\n    \r\n}\r\n\r\nexport default ProtectedRoutes;"],"mappings":";;AAAA,MAAM;EAAEA;AAAS,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEhD,SAASC,eAAe,OAAiB;EAAA,IAAhB;IAACC,IAAI;IAACC;EAAQ,CAAC;EACpC,IAAIC,YAAY,GAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EACrDF,YAAY,GAACA,YAAY,GAAGG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,GAAG,IAAI;EAC3D,IAAGA,YAAY,IAAIA,YAAY,CAACK,KAAK,EAAC;IAClC,OAAON,QAAQ;EACnB,CAAC,MACG;IACA,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAED,IAAK;MAAC,OAAO,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EAC/C;AAEJ;AAAC,KAVQD,eAAe;AAYxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}